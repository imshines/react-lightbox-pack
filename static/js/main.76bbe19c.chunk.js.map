{"version":3,"sources":["../../src/index.js","App.js","index.js"],"names":["LightBox","state","event","data","dataArr","imageWidth","imageHeight","thumbnailHeight","thumbnailWidth","setImageIndex","imageIndex","arrowsHandler","arrow","arrayLength","prevState","className","styles","reactLightboxContainer","reactLightboxCloseButtonContainer","onClick","fill","reactLightboxArea","src","alt","style","maxHeight","maxWidth","reactLightboxArrowRight","React","reactLightboxArrowLeft","position","bottom","display","flexDirection","key","item","height","width","objectFit","margin","borderRadius","App","useState","toggle","setToggle","sIndex","setSIndex","lightBoxHandler","console","log","map","index","id","image","title","ReactDOM","render","document","getElementById"],"mappings":"sgHAMaA,EAAW,SAAC,GAWnB,IAVJC,EAUI,EAVJA,MACAC,EASI,EATJA,MACAC,EAQI,EARJA,KACAC,EAOI,EAPJA,QAOI,IANJC,kBAMI,MANS,OAMT,MALJC,mBAKI,MALU,OAKV,MAJJC,uBAII,MAJc,GAId,MAHJC,sBAGI,MAHa,GAGb,EAFJC,EAEI,EAFJA,cACAC,EACI,EADJA,WAEA,KAAW,CACT,IAAMC,EAAgB,SAACC,GACrB,IAAMC,EAAcV,SAApB,EACA,UACE,WAEIM,EADEC,GAAJ,EACED,EAEc,mBAAeK,EAAf,IAEhB,MACF,WAEIL,EADEC,GAAJ,EACED,EAEc,mBAAeK,EAAf,IAEhB,MACF,QACEL,OAGN,OACE,yBAAKM,UAAWC,EAAOC,wBACrB,yBAAKF,UAAWC,EAAOE,mCACrB,4BACEH,UAAWC,EADb,yBAEEG,QAAS,WACPjB,GAAM,EAANA,GACAO,OAGF,qBAAOW,KAAK,WAGhB,yBAAKL,UAAWC,EAAOK,mBACrB,yBACEC,IAAKnB,KADP,MAEEoB,IAAKpB,EAFP,MAGEqB,MAAO,CAAEC,UAAF,EAA0BC,SAAUrB,KAE7C,yBAAKU,UAAWC,EAAOW,yBACrB,4BACEZ,UAAWC,EADb,oBAEEG,QAAS,kBAAMR,EAAN,UAETiB,oBAXN,QAcE,yBAAKb,UAAWC,EAAOa,wBACrB,4BACEd,UAAWC,EADb,oBAEEG,QAAS,kBAAMR,EAAN,UAETiB,oBA/BR,SAmCE,yBACEJ,MAAO,CACLM,SADK,QAELC,OAFK,OAGLC,QAHK,OAILC,cAAe,QAGhB9B,GACCA,EAAA,KAAS,qBACP,yBACE+B,IAAKC,EADP,GAEEb,IAAKa,EAFP,MAGEZ,IAAKY,EAHP,MAIEC,OAJF,EAKEC,MALF,EAMEb,MAAO,CACLc,UADK,QAELC,OAFK,WAGLC,aAAc,UAEhBrB,QAAS,kBAAMV,EAAN,SAGdL,GACCA,EAAA,KAAY,qBACV,yBACE8B,IADF,EAEEZ,IAFF,EAGEC,IAHF,EAIEa,OAJF,EAKEC,MALF,EAMEb,MAAO,CACLc,UADK,QAELC,OAFK,WAGLC,aAAc,UAEhBrB,QAAS,kBAAMV,EAAN,WAQvB,a,qBC/EagC,MApCf,WACE,MAA4Bb,IAAMc,UAAS,GAA3C,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA4BhB,IAAMc,SAAS,GAA3C,mBAAOG,EAAP,KAAeC,EAAf,KACMC,EAAkB,SAAC9C,EAAO4C,GAC9BD,EAAU3C,GACV6C,EAAUD,IAGZ,OADAG,QAAQC,IAAIJ,GAEV,yBAAK9B,UAAU,OACZZ,EAAK+C,KAAI,SAACf,EAAMgB,GAAP,OACR,yBACEjB,IAAKC,EAAKiB,GACV9B,IAAKa,EAAKkB,MACV9B,IAAKY,EAAKmB,MACV9B,MAAO,CAAEC,UAAW,OAAQC,SAAU,QACtCP,QAAS,WACP4B,GAAgB,EAAMI,SAI5B,kBAAC,EAAD,CACElD,MAAO0C,EACPzC,MAAO6C,EACP5C,KAAMA,EACNE,WAAW,OACXC,YAAY,OACZC,gBAAiB,GACjBC,eAAgB,GAChBC,cAAeqC,EACfpC,WAAYmC,MC9BpBU,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.76bbe19c.chunk.js","sourcesContent":["import React from 'react'\nimport styles from './styles.module.css'\nimport { ReactComponent as RightArrow } from './assets/arrow_right.svg'\nimport { ReactComponent as LeftArrow } from './assets/arrow_left.svg'\nimport { ReactComponent as Close } from './assets/close.svg'\n\nexport const LightBox = ({\n  state,\n  event,\n  data,\n  dataArr,\n  imageWidth = '50vw',\n  imageHeight = '60vh',\n  thumbnailHeight = 50,\n  thumbnailWidth = 50,\n  setImageIndex,\n  imageIndex\n}) => {\n  if (state) {\n    const arrowsHandler = (arrow) => {\n      const arrayLength = data.length - 1\n      switch (arrow) {\n        case 'next':\n          if (imageIndex >= arrayLength) {\n            setImageIndex(0)\n          } else {\n            setImageIndex((prevState) => prevState + 1)\n          }\n          break\n        case 'prev':\n          if (imageIndex <= 0) {\n            setImageIndex(arrayLength)\n          } else {\n            setImageIndex((prevState) => prevState - 1)\n          }\n          break\n        default:\n          setImageIndex(0)\n      }\n    }\n    return (\n      <div className={styles.reactLightboxContainer}>\n        <div className={styles.reactLightboxCloseButtonContainer}>\n          <button\n            className={styles.reactLightboxCloseButton}\n            onClick={() => {\n              event(false, imageIndex)\n              setImageIndex(0)\n            }}\n          >\n            <Close fill='#fff' />\n          </button>\n        </div>\n        <div className={styles.reactLightboxArea}>\n          <img\n            src={data[imageIndex].image}\n            alt={data.title}\n            style={{ maxHeight: imageHeight, maxWidth: imageWidth }}\n          />\n          <div className={styles.reactLightboxArrowRight}>\n            <button\n              className={styles.reactLightboxButton}\n              onClick={() => arrowsHandler('next')}\n            >\n              <RightArrow />\n            </button>\n          </div>\n          <div className={styles.reactLightboxArrowLeft}>\n            <button\n              className={styles.reactLightboxButton}\n              onClick={() => arrowsHandler('prev')}\n            >\n              <LeftArrow />\n            </button>\n          </div>\n        </div>\n        <div\n          style={{\n            position: 'fixed',\n            bottom: '10px',\n            display: 'flex',\n            flexDirection: 'row'\n          }}\n        >\n          {data &&\n            data.map((item, index) => (\n              <img\n                key={item.id}\n                src={item.image}\n                alt={item.title}\n                height={thumbnailHeight}\n                width={thumbnailWidth}\n                style={{\n                  objectFit: 'cover',\n                  margin: '0 0.5rem',\n                  borderRadius: '0.2rem'\n                }}\n                onClick={() => setImageIndex(index)}\n              />\n            ))}\n          {dataArr &&\n            dataArr.map((item, index) => (\n              <img\n                key={item}\n                src={item}\n                alt={item}\n                height={thumbnailHeight}\n                width={thumbnailWidth}\n                style={{\n                  objectFit: 'cover',\n                  margin: '0 0.5rem',\n                  borderRadius: '0.2rem'\n                }}\n                onClick={() => setImageIndex(index)}\n              />\n            ))}\n        </div>\n      </div>\n    )\n  }\n\n  return null\n}\n","import React from \"react\";\nimport { LightBox } from \"react-lightbox-pack\";\nimport \"react-lightbox-pack/dist/index.css\";\nimport data from './data.json';\nimport dataArr from './dataArr.json';\n\nfunction App() {\n  const [toggle, setToggle] = React.useState(false);\n  const [sIndex, setSIndex] = React.useState(0);\n  const lightBoxHandler = (state, sIndex) => {\n    setToggle(state);\n    setSIndex(sIndex);\n  };\n  console.log(sIndex);\n  return (\n    <div className=\"App\">\n      {data.map((item, index) => (\n        <img\n          key={item.id}\n          src={item.image}\n          alt={item.title}\n          style={{ maxHeight: \"80vh\", maxWidth: \"50vw\" }}\n          onClick={() => {\n            lightBoxHandler(true, index);\n          }}\n        />\n      ))}\n      <LightBox\n        state={toggle}\n        event={lightBoxHandler}\n        data={data}\n        imageWidth=\"60vw\"\n        imageHeight=\"70vh\"\n        thumbnailHeight={50}\n        thumbnailWidth={50}\n        setImageIndex={setSIndex}\n        imageIndex={sIndex}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}